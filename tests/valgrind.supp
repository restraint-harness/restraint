# Derived in part from tests/valgrind.supp from nntpgrab:
# http://ftd4linux.nl/svn/nntpgrab/trunk/tests/valgrind.supp

# gobject
{
   g_type_init
   Memcheck:Leak
   ...
   fun:g_type_init
}
{
   g_type_init_with_debug_flags
   Memcheck:Leak
   ...
   fun:g_type_init_with_debug_flags
}
{
   initialization of interfaces
   Memcheck:Leak
   ...
   fun:type_iface_vtable_base_init_Wm
   fun:g_type_class_ref
}
{
   g_type_register_static
   Memcheck:Leak
   ...
   fun:g_type_register_static
}
{
   g_type_add_interface_static
   Memcheck:Leak
   ...
   fun:g_type_add_interface_static
}
{
   GObject base class' signals
   Memcheck:Leak
   ...
   fun:g_signal_new
   fun:g_object_do_class_init
}
# I suspect this is hiding real leaks but I'm not sure...
{
   all GObject classes
   Memcheck:Leak
   ...
   fun:g_type_class_ref
}

# dbus-related shenanigans
{
    get_session_address_dbus_launch
    Memcheck:Leak
    ...
    fun:get_session_address_dbus_launch
}
{
    gdbus socket
    Memcheck:Leak
    ...
    fun:g_socket_create_source
    ...
    fun:gdbus_shared_thread_func
}

# gio (some heavy hammers here, because gio likes global junk)
{
    _g_io_module_get_default
    Memcheck:Leak
    ...
    fun:_g_io_module_get_default
}
{
    gresolver thread pool
    Memcheck:Leak
    ...
    fun:g_system_thread_new
    ...
    fun:g_resolver_lookup_by_name
}

# glibc
{
    pthread_create
    Memcheck:Leak
    fun:calloc
    ...
    fun:pthread_create@@*
}
{
    pthread_create
    Memcheck:Leak
    fun:calloc
    ...
    fun:pthread_create*
}

# libsoup
{
   ld.so/map
   Memcheck:Cond
   fun:index
   fun:expand_dynamic_string_token
   fun:_dl_map_object
}
{
   ld.so/relocate
   Memcheck:Cond
   fun:_dl_relocate_object
   fun:dl_main
   fun:_dl_sysdep_start
   fun:_dl_start
}

# C++ exceptions (used by libproxy)
{
    C++ exceptions
    Memcheck:Leak
    ...
    fun:__cxa_get_globals
    fun:__cxa_throw
}

{
   glib/g_type_init
   Memcheck:Leak
   ...
   fun:g_type_init
}
{
   glib/g_type_init_with_debug_flags
   Memcheck:Leak
   ...
   fun:g_type_init_with_debug_flags
}
{
   glib/g_thread_init
   Memcheck:Leak
   ...
   fun:g_thread_init
}
{
   glib/g_thread_init_glib
   Memcheck:Leak
   ...
   fun:g_thread_init_glib
}
{
   glib/g_thread_self
   Memcheck:Leak
   ...
   fun:g_slice_alloc0
   fun:g_thread_self
}
{
   glib/g_type_register_static
   Memcheck:Leak
   ...
   fun:g_type_register_static
}
{
   glib/g_boxed_type_register_static
   Memcheck:Leak
   ...
   fun:g_boxed_type_register_static
}
{
   glib/g_type_add_interface_static
   Memcheck:Leak
   ...
   fun:g_type_add_interface_static
}
{
   glib/g_type_interface_add_prerequisite
   Memcheck:Leak
   ...
   fun:g_type_interface_add_prerequisite
}
{
   glib/g_type_class_ref
   Memcheck:Leak
   ...
   fun:g_type_class_ref
}
{
   glib/g_set_prgname
   Memcheck:Leak
   ...
   fun:g_set_prgname
}
{
   glib/g_intern_string
   Memcheck:Leak
   ...
   fun:g_intern_string
}
{
   glib/g_intern_static_string
   Memcheck:Leak
   ...
   fun:g_intern_static_string
}
{
   glib/g_quark_from_string
   Memcheck:Leak
   ...
   fun:g_quark_from_string
}
{
   glib/g_quark_from_static_string
   Memcheck:Leak
   ...
   fun:g_quark_from_static_string
}
{
   glib/get_dispatch
   Memcheck:Leak
   ...
   fun:get_dispatch
}
{
   glib/g_signal_connect
   Memcheck:Leak
   ...
   fun:handler_list_ensure
}
{
   glib/g_signal_handlers_destroy
   Memcheck:Leak
   ...
   fun:g_signal_handlers_destroy
}
{
   glib/g_data_initialize
   Memcheck:Leak
   ...
   fun:g_data_initialize
}
{
   glib/g_static_private_set
   Memcheck:Leak
   ...
   fun:g_static_private_set
}
{
   glib/g_child_watch_source_init_multi_threaded
   Memcheck:Leak
   ...
   fun:g_child_watch_source_init_multi_threaded
}
{
   glib/xdg_mime_init
   Memcheck:Leak
   ...
   fun:xdg_mime_init
}
{
   glib/GResolver
   Memcheck:Leak
   ...
   fun:g_resolver_get_default
}
{
   glib/g_main_context_push_thread_default
   Memcheck:Leak
   ...
   fun:g_main_context_push_thread_default
}
{
   glib/g_socket_connection_factory
   Memcheck:Leak
   ...
   fun:g_socket_connection_factory_register_type
}
{
   glib/g_get_language_names
   Memcheck:Leak
   ...
   fun:g_get_language_names
}
{
   glib/giomodules
   Memcheck:Leak
   ...
   fun:_g_io_modules_ensure_loaded
}
{
   glib/giomodules2
   Memcheck:Leak
   ...
   fun:_g_io_module_get_default
}
{
   glib/proxydefault
   Memcheck:Leak
   ...
   fun:get_default_proxy_resolver
}
{
   glib/proxysettings
   Memcheck:Leak
   ...
   fun:update_settings
   fun:g_proxy_resolver_gnome_lookup
}
{
   glib/tlsdefault
   Memcheck:Leak
   ...
   fun:get_default_tls_backend
}
{
   glib/tlsdb
   Memcheck:Leak
   ...
   fun:g_tls_backend_get_default_database
}
{
   glib/tlscache
   Memcheck:Leak
   ...
   fun:g_tls_backend_gnutls_cache_session_data
}
{
   glib/tlspriority
   Memcheck:Leak
   ...
   fun:g_tls_connection_gnutls_init_priorities
}
{
   glib/gfileinfo
   Memcheck:Leak
   ...
   fun:ensure_attribute_hash
   fun:lookup_attribute
}
{
  glib/unixsignalthread
  Memcheck:Leak
  ...
  fun:ensure_unix_signal_handler_installed_unlocked
}
{
  glib/gioscheduler
  Memcheck:Leak
  ...
  fun:init_scheduler
}
{
   glib/gtestinit
   Memcheck:Leak
   ...
   fun:g_test_init
}
{
   glib/gtestroot
   Memcheck:Leak
   ...
   fun:g_test_get_root
}
{
   glib/gtestseed
   Memcheck:Leak
   ...
   fun:test_run_seed
}
{
   glib/gtestcase
   Memcheck:Leak
   ...
   fun:g_test_create_case
}
{
   glib/gtestsuite
   Memcheck:Leak
   ...
   fun:g_test_create_suite
}
{
   glib/gtestsuiteadd
   Memcheck:Leak
   ...
   fun:g_test_suite_add
}
{
   glib/gtestsuiteaddsuite
   Memcheck:Leak
   ...
   fun:g_test_suite_add_suite
}
{
   glib/gtestsuiterun
   Memcheck:Leak
   ...
   fun:g_slist_copy
   fun:g_test_run_suite_internal
}
{
   glib/gthreadpool
   Memcheck:Leak
   ...
   fun:g_thread_pool_start_thread
}
{
   glib/gthreadpool1
   Memcheck:Leak
   ...
   fun:g_thread_pool_wait_for_new_pool
}
{
   glib/gthreadpool2
   Memcheck:Leak
   ...
   fun:g_thread_pool_wait_for_new_task
}
{
   glib/unused_thread_queue
   Memcheck:Leak
   ...
   fun:g_async_queue_new
   fun:g_thread_pool_new
}
{
   glib/gthreadtls
   Memcheck:Leak
   ...
   fun:_dl_allocate_tls
   ...
   fun:g_system_thread_new
}
{
   glib/filenamecharsets
   Memcheck:Leak
   ...
   fun:g_get_filename_charsets
}
{
   glib/charset
   Memcheck:Leak
   ...
   fun:g_get_charset
}
{
   glib/gtlssessioncache
   Memcheck:Leak
   ...
   fun:g_tls_backend_gnutls_store_session
}
{
   glib/gtlssessioncache_client
   Memcheck:Leak
   ...
   fun:gnutls_session_get_data2
   fun:g_tls_client_connection_gnutls_finish_handshake
}
{
   glib/gtlssessioncache_client2
   Memcheck:Leak
   ...
   fun:g_bytes_new_with_free_func
   fun:g_tls_client_connection_gnutls_finish_handshake
}
{
   glib/gtlssessioncache_client3
   Memcheck:Leak
   ...
   fun:g_bytes_new_take
   fun:g_tls_client_connection_gnutls_constructed
}
{
   glib/gtlssessioncache_client4
   Memcheck:Leak
   ...
   fun:g_strdup_printf
   fun:g_tls_client_connection_gnutls_constructed
}
{
   glib/gtlssessioncache_server
   Memcheck:Leak
   ...
   fun:g_tls_server_connection_gnutls_db_store
}
{
   glib/cached_poll_array
   Memcheck:Leak
   ...
   fun:g_malloc_n
   fun:g_main_context_iterate
}
{
   glib/rand
   Memcheck:Leak
   ...
   fun:g_rand_new
   fun:g_random_int_range
}
{
   glib/g_cancellable_push_current
   Memcheck:Leak
   ...
   fun:g_cancellable_push_current
}
{
   glib/slice_thread_local
   Memcheck:Leak
   ...
   fun:thread_memory_from_self
}
{
   glib/gobjectinit
   Memcheck:Leak
   ...
   fun:gobject_init_ctor
}
{
   glib/gtask threadpool
   Memcheck:Leak
   ...
   fun:g_thread_pool_new
   fun:g_task_thread_pool_init
}

# probably inlines the aggressive memcpy/memcmp
{
   gnutls/der
   Memcheck:Addr4
   ...
   fun:asn1_der_coding
}
# probably using uninitialized memory as padding or something
{
   gnutls/handshake
   Memcheck:Cond
   ...
   fun:gnutls_handshake
}
{
   gnutls/init
   Memcheck:Leak
   ...
   fun:gnutls_global_init
}
# known leak in gnutls 2.12, fixed in 3.0
{
   gnutls/server_key_leak
   Memcheck:Leak
   ...
   fun:call_get_cert_callback
}

{
   libxml2/xmlInitParser
   Memcheck:Leak
   ...
   fun:xmlInitParser
}
{
   libxml2/xmlInitParserCtxt
   Memcheck:Leak
   ...
   fun:xmlInitParserCtxt
}
{
   libxml2/xmlInitializeDict
   Memcheck:Leak
   ...
   fun:xmlInitializeDict
}
{
   libxml2/xmlInitCharEncodingHandlers
   Memcheck:Leak
   ...
   fun:xmlInitCharEncodingHandlers
}
{
   libxml2/xmlNewCharEncodingHandler
   Memcheck:Leak
   ...
   fun:xmlNewCharEncodingHandler
}

{
   libsoup/interned_uri_schemes
   Memcheck:Leak
   ...
   fun:g_ascii_strdown
   fun:soup_uri_parse_scheme
}
{
   libsoup/interned_headers
   Memcheck:Leak
   ...
   fun:intern_header_name
}
{
   libsoup/tlds
   Memcheck:Leak
   ...
   fun:soup_tld_ensure_rules_hash_table
}


# fixme?
{
   glib/gmuteximpl
   Memcheck:Leak
   ...
   fun:g_mutex_impl_new
   fun:g_mutex_get_impl
}
{
   glib/gcondimpl
   Memcheck:Leak
   ...
   fun:g_cond_impl_new
   fun:g_cond_get_impl
}
{
   glib/gprivateimpl
   Memcheck:Leak
   ...
   fun:g_private_impl_new
   fun:g_private_get_impl
}


{
   _glib_sigaction
   Memcheck:Param
   rt_sigaction(act->sa_flags)
   fun:__libc_sigaction
   fun:unref_unix_signal_handler_unlocked
   ...
   fun:g_main_loop_run
   ...
}

{
   g_thread_proxy
   Memcheck:Leak
   match-leak-kinds: definite
   ...
   fun:__resolv_conf_get_current
   ...
   fun:getaddrinfo
   ...
}
{
   g_thread_proxy
   Memcheck:Leak
   match-leak-kinds: definite
   ...
   fun:__resolv_context_get
   ...
   fun:getaddrinfo
   ...
}
{
   g-type-register-fundamental-calloc
   Memcheck:Leak
   match-leak-kinds:possible,reachable
   fun:calloc
   ...
   fun:g_type_register_fundamental
}
{
   g-type-register-fundamental
   Memcheck:Leak
   match-leak-kinds:possible,reachable
   fun:malloc
   ...
   fun:g_type_register_fundamental
}
{
   glib/g_malloc0
   Memcheck:Leak
   match-leak-kinds:possible,reachable
   ...
   fun:g_malloc0
   ...
   fun:_dl_init
}
{
   glib/malloc
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:UnknownInlinedFun
   fun:_dl_close_worker
   fun:_dl_close
   fun:_dl_catch_exception
   fun:_dl_catch_error
   fun:_dlerror_run
   ...
}

{
   libproxy/duktape/realloc
   Memcheck:ReallocZero
   fun:realloc
   ...
   fun:duk_compile_raw
   fun:duk_eval_raw
   ...
   fun:px_manager_new_with_options
   fun:px_proxy_factory_new
}
